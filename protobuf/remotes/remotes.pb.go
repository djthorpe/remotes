// Code generated by protoc-gen-go. DO NOT EDIT.
// source: remotes/remotes.proto

/*
Package remotes is a generated protocol buffer package.

It is generated from these files:
	remotes/remotes.proto

It has these top-level messages:
	EmptyRequest
	EmptyReply
	Point
	InputEvent
*/
package remotes

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/duration"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type InputDeviceType int32

const (
	InputDeviceType_INPUT_TYPE_NONE        InputDeviceType = 0
	InputDeviceType_INPUT_TYPE_KEYBOARD    InputDeviceType = 1
	InputDeviceType_INPUT_TYPE_MOUSE       InputDeviceType = 2
	InputDeviceType_INPUT_TYPE_TOUCHSCREEN InputDeviceType = 4
	InputDeviceType_INPUT_TYPE_JOYSTICK    InputDeviceType = 8
	InputDeviceType_INPUT_TYPE_REMOTE      InputDeviceType = 10
)

var InputDeviceType_name = map[int32]string{
	0:  "INPUT_TYPE_NONE",
	1:  "INPUT_TYPE_KEYBOARD",
	2:  "INPUT_TYPE_MOUSE",
	4:  "INPUT_TYPE_TOUCHSCREEN",
	8:  "INPUT_TYPE_JOYSTICK",
	10: "INPUT_TYPE_REMOTE",
}
var InputDeviceType_value = map[string]int32{
	"INPUT_TYPE_NONE":        0,
	"INPUT_TYPE_KEYBOARD":    1,
	"INPUT_TYPE_MOUSE":       2,
	"INPUT_TYPE_TOUCHSCREEN": 4,
	"INPUT_TYPE_JOYSTICK":    8,
	"INPUT_TYPE_REMOTE":      10,
}

func (x InputDeviceType) String() string {
	return proto.EnumName(InputDeviceType_name, int32(x))
}
func (InputDeviceType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type InputEventType int32

const (
	InputEventType_INPUT_EVENT_NONE          InputEventType = 0
	InputEventType_INPUT_EVENT_KEYPRESS      InputEventType = 1
	InputEventType_INPUT_EVENT_KEYRELEASE    InputEventType = 2
	InputEventType_INPUT_EVENT_KEYREPEAT     InputEventType = 3
	InputEventType_INPUT_EVENT_ABSPOSITION   InputEventType = 4
	InputEventType_INPUT_EVENT_RELPOSITION   InputEventType = 5
	InputEventType_INPUT_EVENT_TOUCHPRESS    InputEventType = 6
	InputEventType_INPUT_EVENT_TOUCHRELEASE  InputEventType = 7
	InputEventType_INPUT_EVENT_TOUCHPOSITION InputEventType = 8
)

var InputEventType_name = map[int32]string{
	0: "INPUT_EVENT_NONE",
	1: "INPUT_EVENT_KEYPRESS",
	2: "INPUT_EVENT_KEYRELEASE",
	3: "INPUT_EVENT_KEYREPEAT",
	4: "INPUT_EVENT_ABSPOSITION",
	5: "INPUT_EVENT_RELPOSITION",
	6: "INPUT_EVENT_TOUCHPRESS",
	7: "INPUT_EVENT_TOUCHRELEASE",
	8: "INPUT_EVENT_TOUCHPOSITION",
}
var InputEventType_value = map[string]int32{
	"INPUT_EVENT_NONE":          0,
	"INPUT_EVENT_KEYPRESS":      1,
	"INPUT_EVENT_KEYRELEASE":    2,
	"INPUT_EVENT_KEYREPEAT":     3,
	"INPUT_EVENT_ABSPOSITION":   4,
	"INPUT_EVENT_RELPOSITION":   5,
	"INPUT_EVENT_TOUCHPRESS":    6,
	"INPUT_EVENT_TOUCHRELEASE":  7,
	"INPUT_EVENT_TOUCHPOSITION": 8,
}

func (x InputEventType) String() string {
	return proto.EnumName(InputEventType_name, int32(x))
}
func (InputEventType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type EmptyRequest struct {
}

func (m *EmptyRequest) Reset()                    { *m = EmptyRequest{} }
func (m *EmptyRequest) String() string            { return proto.CompactTextString(m) }
func (*EmptyRequest) ProtoMessage()               {}
func (*EmptyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type EmptyReply struct {
}

func (m *EmptyReply) Reset()                    { *m = EmptyReply{} }
func (m *EmptyReply) String() string            { return proto.CompactTextString(m) }
func (*EmptyReply) ProtoMessage()               {}
func (*EmptyReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Point struct {
	X float32 `protobuf:"fixed32,1,opt,name=x" json:"x,omitempty"`
	Y float32 `protobuf:"fixed32,2,opt,name=y" json:"y,omitempty"`
}

func (m *Point) Reset()                    { *m = Point{} }
func (m *Point) String() string            { return proto.CompactTextString(m) }
func (*Point) ProtoMessage()               {}
func (*Point) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Point) GetX() float32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Point) GetY() float32 {
	if m != nil {
		return m.Y
	}
	return 0
}

type InputEvent struct {
	Ts         *google_protobuf.Duration `protobuf:"bytes,1,opt,name=ts" json:"ts,omitempty"`
	DeviceType InputDeviceType           `protobuf:"varint,2,opt,name=device_type,json=deviceType,enum=mutablelogic.InputDeviceType" json:"device_type,omitempty"`
	EventType  InputDeviceType           `protobuf:"varint,3,opt,name=event_type,json=eventType,enum=mutablelogic.InputDeviceType" json:"event_type,omitempty"`
	Scancode   uint32                    `protobuf:"varint,4,opt,name=scancode" json:"scancode,omitempty"`
	Position   *Point                    `protobuf:"bytes,5,opt,name=position" json:"position,omitempty"`
	Relative   *Point                    `protobuf:"bytes,6,opt,name=relative" json:"relative,omitempty"`
	Slot       uint32                    `protobuf:"varint,7,opt,name=slot" json:"slot,omitempty"`
}

func (m *InputEvent) Reset()                    { *m = InputEvent{} }
func (m *InputEvent) String() string            { return proto.CompactTextString(m) }
func (*InputEvent) ProtoMessage()               {}
func (*InputEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *InputEvent) GetTs() *google_protobuf.Duration {
	if m != nil {
		return m.Ts
	}
	return nil
}

func (m *InputEvent) GetDeviceType() InputDeviceType {
	if m != nil {
		return m.DeviceType
	}
	return InputDeviceType_INPUT_TYPE_NONE
}

func (m *InputEvent) GetEventType() InputDeviceType {
	if m != nil {
		return m.EventType
	}
	return InputDeviceType_INPUT_TYPE_NONE
}

func (m *InputEvent) GetScancode() uint32 {
	if m != nil {
		return m.Scancode
	}
	return 0
}

func (m *InputEvent) GetPosition() *Point {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *InputEvent) GetRelative() *Point {
	if m != nil {
		return m.Relative
	}
	return nil
}

func (m *InputEvent) GetSlot() uint32 {
	if m != nil {
		return m.Slot
	}
	return 0
}

func init() {
	proto.RegisterType((*EmptyRequest)(nil), "mutablelogic.EmptyRequest")
	proto.RegisterType((*EmptyReply)(nil), "mutablelogic.EmptyReply")
	proto.RegisterType((*Point)(nil), "mutablelogic.Point")
	proto.RegisterType((*InputEvent)(nil), "mutablelogic.InputEvent")
	proto.RegisterEnum("mutablelogic.InputDeviceType", InputDeviceType_name, InputDeviceType_value)
	proto.RegisterEnum("mutablelogic.InputEventType", InputEventType_name, InputEventType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Remotes service

type RemotesClient interface {
	// Receive remotes
	Receive(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (Remotes_ReceiveClient, error)
}

type remotesClient struct {
	cc *grpc.ClientConn
}

func NewRemotesClient(cc *grpc.ClientConn) RemotesClient {
	return &remotesClient{cc}
}

func (c *remotesClient) Receive(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (Remotes_ReceiveClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Remotes_serviceDesc.Streams[0], c.cc, "/mutablelogic.Remotes/Receive", opts...)
	if err != nil {
		return nil, err
	}
	x := &remotesReceiveClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Remotes_ReceiveClient interface {
	Recv() (*InputEvent, error)
	grpc.ClientStream
}

type remotesReceiveClient struct {
	grpc.ClientStream
}

func (x *remotesReceiveClient) Recv() (*InputEvent, error) {
	m := new(InputEvent)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Remotes service

type RemotesServer interface {
	// Receive remotes
	Receive(*EmptyRequest, Remotes_ReceiveServer) error
}

func RegisterRemotesServer(s *grpc.Server, srv RemotesServer) {
	s.RegisterService(&_Remotes_serviceDesc, srv)
}

func _Remotes_Receive_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EmptyRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RemotesServer).Receive(m, &remotesReceiveServer{stream})
}

type Remotes_ReceiveServer interface {
	Send(*InputEvent) error
	grpc.ServerStream
}

type remotesReceiveServer struct {
	grpc.ServerStream
}

func (x *remotesReceiveServer) Send(m *InputEvent) error {
	return x.ServerStream.SendMsg(m)
}

var _Remotes_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mutablelogic.Remotes",
	HandlerType: (*RemotesServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Receive",
			Handler:       _Remotes_Receive_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "remotes/remotes.proto",
}

func init() { proto.RegisterFile("remotes/remotes.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 523 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0xdb, 0x6e, 0xda, 0x40,
	0x10, 0xad, 0x9d, 0x70, 0xc9, 0x84, 0x12, 0x77, 0x09, 0x8d, 0xa1, 0x4d, 0x15, 0xd1, 0x97, 0x34,
	0x0f, 0xa6, 0xa2, 0xaf, 0x55, 0x25, 0x2e, 0x2b, 0x95, 0x42, 0xb0, 0xb5, 0x36, 0x95, 0xe8, 0x0b,
	0x02, 0xb3, 0x45, 0x96, 0x8c, 0xd7, 0xc5, 0x6b, 0x14, 0xff, 0x42, 0xff, 0xa2, 0x5f, 0xd3, 0xdf,
	0xaa, 0xbc, 0xc6, 0x8e, 0x03, 0x55, 0xd5, 0x27, 0xef, 0xec, 0x99, 0x33, 0xe7, 0xec, 0x8c, 0x07,
	0xea, 0x5b, 0xba, 0x61, 0x9c, 0x06, 0xed, 0xfd, 0x57, 0xf3, 0xb7, 0x8c, 0x33, 0x54, 0xd9, 0x84,
	0x7c, 0xb1, 0x74, 0xa9, 0xcb, 0xd6, 0x8e, 0xdd, 0x7c, 0xb3, 0x66, 0x6c, 0xed, 0xd2, 0xb6, 0xc0,
	0x96, 0xe1, 0xf7, 0xf6, 0x2a, 0xdc, 0x2e, 0xb8, 0xc3, 0xbc, 0x24, 0xbb, 0x55, 0x85, 0x0a, 0xde,
	0xf8, 0x3c, 0x22, 0xf4, 0x47, 0x48, 0x03, 0xde, 0xaa, 0x00, 0xec, 0x63, 0xdf, 0x8d, 0x5a, 0x6f,
	0xa1, 0x60, 0x30, 0xc7, 0xe3, 0xa8, 0x02, 0xd2, 0x83, 0x2a, 0xdd, 0x48, 0xb7, 0x32, 0x91, 0x1e,
	0xe2, 0x28, 0x52, 0xe5, 0x24, 0x8a, 0x5a, 0xbf, 0x65, 0x80, 0xa1, 0xe7, 0x87, 0x1c, 0xef, 0xa8,
	0xc7, 0xd1, 0x3b, 0x90, 0x79, 0x20, 0x72, 0xcf, 0x3b, 0x0d, 0x2d, 0x91, 0xd7, 0x52, 0x79, 0x6d,
	0xb0, 0x97, 0x27, 0x32, 0x0f, 0xd0, 0x27, 0x38, 0x5f, 0xd1, 0x9d, 0x63, 0xd3, 0x39, 0x8f, 0x7c,
	0x2a, 0x2a, 0x56, 0x3b, 0xd7, 0x5a, 0xfe, 0x01, 0x9a, 0xa8, 0x3c, 0x10, 0x59, 0x56, 0xe4, 0x53,
	0x02, 0xab, 0xec, 0x8c, 0x3e, 0x02, 0xd0, 0x58, 0x33, 0xa1, 0x9f, 0xfc, 0x0f, 0xfd, 0x4c, 0x10,
	0x04, 0xbb, 0x09, 0xe5, 0xc0, 0x5e, 0x78, 0x36, 0x5b, 0x51, 0xf5, 0xf4, 0x46, 0xba, 0x7d, 0x4e,
	0xb2, 0x18, 0xb5, 0xa1, 0xec, 0xb3, 0xc0, 0x89, 0x9d, 0xaa, 0x05, 0xf1, 0x94, 0xda, 0xd3, 0xba,
	0xa2, 0x2d, 0x24, 0x4b, 0x8a, 0x09, 0x5b, 0xea, 0x2e, 0xb8, 0xb3, 0xa3, 0x6a, 0xf1, 0x1f, 0x84,
	0x34, 0x09, 0x21, 0x38, 0x0d, 0x5c, 0xc6, 0xd5, 0x92, 0x50, 0x16, 0xe7, 0xbb, 0x5f, 0x12, 0x5c,
	0x1c, 0x18, 0x46, 0x35, 0xb8, 0x18, 0x4e, 0x8c, 0xa9, 0x35, 0xb7, 0x66, 0x06, 0x9e, 0x4f, 0xf4,
	0x09, 0x56, 0x9e, 0xa1, 0x2b, 0xa8, 0xe5, 0x2e, 0x47, 0x78, 0xd6, 0xd3, 0xbb, 0x64, 0xa0, 0x48,
	0xe8, 0x12, 0x94, 0x1c, 0x70, 0xaf, 0x4f, 0x4d, 0xac, 0xc8, 0xa8, 0x09, 0x2f, 0x73, 0xb7, 0x96,
	0x3e, 0xed, 0x7f, 0x36, 0xfb, 0x04, 0xe3, 0x89, 0x72, 0x7a, 0x50, 0xea, 0x8b, 0x3e, 0x33, 0xad,
	0x61, 0x7f, 0xa4, 0x94, 0x51, 0x1d, 0x5e, 0xe4, 0x00, 0x82, 0xef, 0x75, 0x0b, 0x2b, 0x70, 0xf7,
	0x53, 0x86, 0xea, 0xe3, 0xb4, 0x85, 0xc5, 0x4c, 0x14, 0x7f, 0xc5, 0x13, 0x2b, 0xf5, 0xa8, 0xc2,
	0x65, 0xfe, 0x76, 0x84, 0x67, 0x06, 0xc1, 0xa6, 0xa9, 0x48, 0x8f, 0x76, 0x32, 0x84, 0xe0, 0x31,
	0xee, 0x0a, 0xab, 0x0d, 0xa8, 0x1f, 0x61, 0x06, 0xee, 0x5a, 0xca, 0x09, 0x7a, 0x05, 0x57, 0x79,
	0xa8, 0xdb, 0x33, 0x0d, 0xdd, 0x1c, 0x5a, 0x43, 0x3d, 0x7e, 0xc6, 0x01, 0x48, 0xf0, 0x38, 0x03,
	0x0b, 0x87, 0x82, 0xa2, 0x01, 0x89, 0x99, 0x22, 0x7a, 0x0d, 0xea, 0x11, 0x96, 0xda, 0x29, 0xa1,
	0x6b, 0x68, 0x1c, 0x33, 0xd3, 0xc2, 0xe5, 0xce, 0x18, 0x4a, 0x24, 0x59, 0x3e, 0xd4, 0x8d, 0x8f,
	0x36, 0x8d, 0x47, 0xdb, 0x7c, 0x3a, 0xf9, 0xfc, 0x7e, 0x35, 0xd5, 0xbf, 0xfc, 0x9e, 0xa2, 0x93,
	0xef, 0xa5, 0xde, 0xd9, 0xb7, 0xd2, 0x7e, 0x95, 0x97, 0x45, 0xb1, 0x30, 0x1f, 0xfe, 0x04, 0x00,
	0x00, 0xff, 0xff, 0xff, 0x12, 0xd1, 0x7c, 0xe4, 0x03, 0x00, 0x00,
}
